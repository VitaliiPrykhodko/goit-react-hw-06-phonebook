{"version":3,"sources":["Filter/Filter.module.css","App.module.css","Form/Form.js","Redux/Counter/counter-action.js","Contacts/ContactListItem.js","Contacts/ContactsList.js","Filter/Filter.js","App.js","Redux/Counter/counter-reducer.js","Redux/store.js","index.js","Form/Form.module.css","Contacts/ContactsList.module.css"],"names":["module","exports","Form","onClick","useState","name","setName","number","setNumber","handleChange","e","currentTarget","value","className","styles","form_contact","form_label","onChange","input_contact","type","pattern","title","required","btn_contact","addContact","createAction","payload","key","shortid","deleteContact","changeFilter","localStorage","ContactListItem","contacts","dispatch","useDispatch","map","contact_item","contact_btn","action","ContactList","contact_list","Filter","handleFilter","filter","useSelector","state","filter_box","filter_label","input_filter","App","items","find","contact","alert","actions","normalizeFilter","toLowerCase","includes","foundContacts","createReducer","_","persistConfig","storage","reducer","combineReducers","persistedReducer","persistReducer","store","configureStore","devTools","process","middleware","thunk","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.deb3dfc2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter_label\":\"Filter_filter_label__KLYgU\",\"input_filter\":\"Filter_input_filter__28Bei\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3CQ_q\"};","import PropTypes from \"prop-types\";\nimport { useState } from \"react\";\nimport styles from \"./Form.module.css\";\n\nfunction Form({ onClick }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  function handleChange(e) {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  }\n\n  function handleClick() {\n    onClick(name, number);\n    resetState();\n  }\n\n  function resetState() {\n    setName(\"\");\n    setNumber(\"\");\n  }\n\n  return (\n    <form className={styles.form_contact}>\n      <label className={styles.form_label}>\n        Name\n        <input\n          onChange={handleChange}\n          value={name}\n          className={styles.input_contact}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label className={styles.form_label}>\n        Number\n        <input\n          onChange={handleChange}\n          value={number}\n          className={styles.input_contact}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <button\n        type=\"button\"\n        className={styles.btn_contact}\n        onClick={handleClick}\n      >\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nForm.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Form;\n","import { createAction } from \"@reduxjs/toolkit\";\r\nimport shortid from \"shortid\";\r\n\r\nconst addContact = createAction(\"contacts/add\", (name, number) => ({\r\n  payload: {\r\n    key: shortid(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\n\r\nconst deleteContact = createAction(\"contacts/delete\");\r\n\r\nconst changeFilter = createAction(\"contacts/changeFilter\");\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { addContact, deleteContact, changeFilter, localStorage};\r\n","import PropTypes from \"prop-types\";\nimport styles from \"./ContactsList.module.css\"\nimport { useDispatch } from \"react-redux\";\nimport  action from \"../Redux/Counter/counter-action\";\n\nconst ContactListItem = ({ contacts }) => {\n  const dispatch = useDispatch()\n    return contacts.map(({key,name,number}) => {\n       return (\n    <li key={key} className={styles.contact_item}>\n      <span>{name}</span>: <span>{number}</span>\n      <button className={styles.contact_btn} onClick={()=> dispatch(action.deleteContact(key))}>\n        Delete\n      </button>\n    </li>\n  );\n   })\n  \n};\n\nContactListItem.propTypes = {\n    contacts: PropTypes.arrayOf(PropTypes.shape({\n        key: PropTypes.node.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired\n    })),\n}\n\n\nexport { ContactListItem };\n","import PropTypes from \"prop-types\";\nimport { ContactListItem } from \"./ContactListItem\"\nimport styles from \"./ContactsList.module.css\"\n\nconst ContactList = ({ contacts}) => {\n    return (\n        <ul className={styles.contact_list}>\n                    <ContactListItem\n                        contacts={contacts}\n                    />\n          </ul>\n    )\n}\n\nContactList.propTypes = {\n    contacts: PropTypes.arrayOf(PropTypes.object.isRequired),\n}\nexport default ContactList","import PropTypes from \"prop-types\";\nimport styles from \"./Filter.module.css\"\nimport { useSelector } from \"react-redux\";\n\nconst Filter = ({ handleFilter }) => {\n  const filter = useSelector((state)=>state.contacts.filter)\n    return (\n        <div className={styles.filter_box}>\n             <label className={styles.filter_label}>\n        Find contacts by name\n        <input\n          onChange={handleFilter}\n          value={filter}\n          className={styles.input_filter}\n          type=\"text\"\n        />\n      </label>\n        </div>\n       \n    )\n}\n\nFilter.propTypes = {\n    handleFilter: PropTypes.func.isRequired\n}\n\nexport default Filter","import Form from \"./Form/Form.js\";\nimport ContactList from \"./Contacts/ContactsList\";\nimport Filter from \"./Filter/Filter\";\nimport styles from \"./App.module.css\";\nimport { useSelector } from 'react-redux'\nimport { useDispatch } from \"react-redux\";\nimport actions from './Redux/Counter/counter-action';\n\nfunction App() {\n  const contacts = useSelector((state)=> state.contacts.items)\n  const filter = useSelector((state) => state.contacts.filter)\n  const dispatch = useDispatch()\n\n  function handleFilter(e) {\n    const { value } = e.currentTarget;\n    dispatch(actions.changeFilter(value))\n  }\n\n  function foundContacts() {\n    const normalizeFilter = filter.toLowerCase();\n    if (contacts) {\n      return contacts.filter((contact) => {\n        return contact.name.toLowerCase().includes(normalizeFilter);\n      });\n    }\n  }\n\n  function handleAddContact(name, number) {\n    if (\n      contacts.find((contact) => {\n        return contact.name === name || contact.number === number;\n      })\n    )\n      return alert(`${name} is already in contacts`);\n\n    if (name === \"\" || number === \"\") return alert(\"Please enter correct name\");\n    else {\n\n      dispatch(actions.addContact(name, number))\n    }\n  }\n\n  return (\n    <div className={styles.App}>\n      <h1>Phonebook</h1>\n      <Form onClick={handleAddContact} />\n      <h2 className=\"contact_title\">Contacts</h2>\n      <Filter handleFilter={handleFilter} />\n      <ContactList\n        contacts={foundContacts()}\n      />\n      </div>\n  );\n}\n\nexport default App;\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport actions from './counter-action';\r\n\r\nexport const items = createReducer([], {\r\n  [actions.addContact]: (state, { payload }) => [...state, payload],\r\n  [actions.deleteContact]: (state, { payload }) =>\r\n    state.filter(({ key }) => key !== payload),\r\n});\r\n\r\nexport const filter = createReducer('', {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { persistReducer } from 'redux-persist';\r\nimport { combineReducers } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport {items, filter} from './Counter/counter-reducer'\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n};\r\n\r\nconst reducer = combineReducers({\r\n  items: items,\r\n  filter: filter\r\n})\r\n\r\nconst persistedReducer = persistReducer(persistConfig, reducer)\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: persistedReducer,\r\n  },\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n  middleware: [thunk],\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './Redux/store'\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { persistStore } from 'redux-persist';\n\nlet persistor = persistStore(store);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_contact\":\"Form_form_contact__1CHi1\",\"form_label\":\"Form_form_label__K-k7X\",\"input_contact\":\"Form_input_contact__1XLGQ\",\"btn_contact\":\"Form_btn_contact__1eC4E\",\"filter_label\":\"Form_filter_label__2_f_e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_list\":\"ContactsList_contact_list__3RoMr\",\"contact_item\":\"ContactsList_contact_item__14s45\",\"contact_btn\":\"ContactsList_contact_btn__xjoRL\"};"],"sourceRoot":""}